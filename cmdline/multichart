#!/usr/bin/env php
<?php # (jEdit options) :folding=explicit:collapseFolds=1:
/*****************************************************************************
INPUTS / SWITCHES (via $_SERVER['argv']):
    inFile          a PDB file to operate on, with hydrogens already added
    -html           forces output to be HTML (the default)
    -coot           forces output to be a Scheme script for Coot

OUTPUTS / RESULTS:
    A copy of the multi-criterion chart written to stdout.

*****************************************************************************/
// EVERY *top-level* page must start this way:
// 1. Define it's relationship to the root of the MolProbity installation.
// Pages in subdirectories of lib/ or public_html/ will need more "/.." 's.
    if(!defined('MP_BASE_DIR')) define('MP_BASE_DIR', realpath(dirname(__FILE__).'/..'));
// 2. Include core functionality - defines constants, etc.
    require_once(MP_BASE_DIR.'/lib/core.php');
    require_once(MP_BASE_DIR.'/lib/model.php');
    require_once(MP_BASE_DIR.'/lib/analyze.php');
    require_once(MP_BASE_DIR.'/lib/visualize.php');
// 3. Restore session data. If you don't want to access the session
// data for some reason, you must call mpInitEnvirons() instead.
    mpInitEnvirons();       // use std PATH, etc.
    //mpStartSession(true);   // create session dir
// 5. Set up reasonable values to emulate CLI behavior if we're CGI
    set_time_limit(0); // don't want to bail after 30 sec!
// 6. Unlimited memory for processing large files
    ini_set('memory_limit', -1);

#{{{ a_function_definition - sumary_statement_goes_here
############################################################################
/**
* Documentation for this function.
*/
//function someFunctionName() {}
#}}}########################################################################

# MAIN - the beginning of execution for this page
############################################################################
$mode = 'html';

// First argument is the name of this script...
if(is_array($_SERVER['argv'])) foreach(array_slice($_SERVER['argv'], 1) as $arg)
{
    if($arg == '-html')         $mode = 'html';
    elseif($arg == '-coot')     $mode = 'coot';
    elseif(!isset($inFile))     $inFile = $arg;
    else                        die("Too many or unrecognized arguments: '$arg'\n");
}

if(!isset($inFile))         die("No input file specified.\n");
elseif(!is_file($inFile))   die("Input file '$inFile' does not exist.\n");

mpStartSession(true); // create a new session

$inpath = $inFile;
$modelID = addModelOrEnsemble(
             $inpath,
             basename($inpath),
             false,
             true,
             true,
             false);

$model =& $_SESSION['models'][$modelID];
$reduce_blength = $_SESSION['reduce_blength'];
//$bcutval = 40; TO-DO - make these user controllable
//$ocutval = 10;
$pdbfile = $_SESSION['dataDir'].'/'.MP_DIR_MODELS."/$model[pdb]";
$rawDir  = $_SESSION['dataDir'].'/'.MP_DIR_RAWDATA;
if(!file_exists($rawDir)) mkdir($rawDir, 0777);
$filename = basename($pdbfile);

$stats = $model['stats'];
$hasProtein = ($stats['sidechains'] > 0 ? True : False);
$hasNucAcid = ($stats['nucacids'] > 0 ? True : False);

$summaries = array();

if($hasProtein)
{
  runRotamer($pdbfile, "$rawDir/$model[prefix]rota.data");
  $rota = loadRotamer("$rawDir/$model[prefix]rota.data");

  runRamachandran($pdbfile, "$rawDir/$model[prefix]rama.data");
  $rama = loadRamachandran("$rawDir/$model[prefix]rama.data");
  $summaries['rama'] = loadRamachandranSummary("$rawDir/$model[prefix]rama.data");
  runRamaZ($pdbfile, "$rawDir/$model[prefix]ramaZ.txt");
  $summaries['ramaZ'] = loadRamaZ("$rawDir/$model[prefix]ramaZ.txt");

  runCbetaDev($pdbfile, "$rawDir/$model[prefix]cbdev.data");
  $cbdev = loadCbetaDev("$rawDir/$model[prefix]cbdev.data");

  runOmegalyze($pdbfile, "$rawDir/$model[prefix]omega.data");
  $omega = loadOmegalyze("$rawDir/$model[prefix]omega.data");

  runCaBLAM($pdbfile, "$rawDir/$model[prefix]cablam.data");
  $cablam = loadCablam("$rawDir/$model[prefix]cablam.data");
  $summaries['cablam'] = loadCablamSummary("$rawDir/$model[prefix]cablam.data");
}
else
{
  $rota = null;
  $rama = null;
  $cbdev = null;
}

#runClashlist($pdbfile, "$rawDir/$model[prefix]clash.data", $reduce_blength);
#$clash = loadClashlist("$rawDir/$model[prefix]clash.data");
runClashscore($pdbfile, "$rawDir/$model[prefix]clashlist.txt", $reduce_blength);
$clash = loadClashscore("$rawDir/$model[prefix]clashlist.txt");

runValidationReport($pdbfile, "$rawDir/$model[prefix]geom.data", $model['stats']['use_cdl']);

if($hasNucAcid)
{
  runBasePhosPerp($pdbfile, "$rawDir/$model[prefix]pperp.data");
  $pperp = loadBasePhosPerp("$rawDir/$model[prefix]pperp.data");

  $midfile = "$rawDir/$model[prefix]suitedata.txt";
  runSuitenameReport($pdbfile, $midfile, "$rawDir/$model[prefix]suite.data");
  $suites = loadSuitenameReport("$rawDir/$model[prefix]suite.data");
}
else
{
  $pperp = null;
  $suites = null;
}


$bbonds = [];
$bangles = [];
if($hasProtein)
{
  $bbonds  = array_merge($bbonds,  loadValidationBondReport("$rawDir/$model[prefix]geom.data","protein"));
  $bangles = array_merge($bangles, loadValidationAngleReport("$rawDir/$model[prefix]geom.data","protein"));
}
if($hasNucAcid)
{
  $bbonds  = array_merge($bbonds,  loadValidationBondReport("$rawDir/$model[prefix]geom.data","rna"));
  $bangles = array_merge($bangles, loadValidationAngleReport("$rawDir/$model[prefix]geom.data","rna"));
}
if (count($bbonds) == 0) $bbonds = null;
if (count($bangles) == 0) $bangles = null;
//$chiral_outfile = "$rawDir/$model[prefix]chirals.txt";
makeChiralOutlierTable("$rawDir/$model[prefix]geom.data","$rawDir/$model[prefix]chirals.txt");
$chiral_summary = load_chiral_summary("$rawDir/$model[prefix]chirals.txt");
//$chiral_summary = load_chiral_summary("$rawDir/$model[prefix]geom.data");
//echo $chiral_summary;

$undowserfile = "$rawDir/$model[prefix]undowser.html";
runUndowser($pdbfile,$undowserfile);
$undowser = loadUndowserSummary($undowserfile);

$curation = array(
      'showAllOmegaStats' => false);

$resout = null; //see lib/visualize.php, has something to do with horiz?
if($mode == 'coot')
    makeCootClusteredChart($pdbfile, "php://stdout", $clash, $rama, $rota, $cbdev, $pperp);
else
    writeMulticritChart($pdbfile, "/dev/null", "php://stdout", $resout, $clash, $rama, $rota, $cbdev, $pperp, $suites, $bbonds, $bangles, $chiral_summary, $undowser, $cablam, $omega, $summaries, $curation, $outliersOnly=false, $doHtmlTable=true, $cleanupAltloc=true);

mpDestroySession();

############################################################################
// Clean up and go home
//mpDestroySession(); // only call this if we created one
?>
